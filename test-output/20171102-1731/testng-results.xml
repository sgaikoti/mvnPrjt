<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="86" started-at="2017-11-02T17:32:03Z" finished-at="2017-11-02T17:32:03Z">
    <groups>
      <group name="Regression">
        <method signature="TestNGClass.test4()[pri:4, instance:testNGPkg.TestNGClass@9f73a2]" name="test4" class="testNGPkg.TestNGClass"/>
      </group> <!-- Regression -->
      <group name="sanity">
        <method signature="TestNGClass.test3()[pri:3, instance:testNGPkg.TestNGClass@9f73a2]" name="test3" class="testNGPkg.TestNGClass"/>
      </group> <!-- sanity -->
    </groups>
    <test name="Test" duration-ms="86" started-at="2017-11-02T17:32:03Z" finished-at="2017-11-02T17:32:03Z">
      <class name="testNGPkg.TestNGClass">
        <test-method status="PASS" signature="beforesuite()[pri:0, instance:testNGPkg.TestNGClass@9f73a2]" name="beforesuite" is-config="true" duration-ms="29" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method status="PASS" signature="beforetest()[pri:0, instance:testNGPkg.TestNGClass@9f73a2]" name="beforetest" is-config="true" duration-ms="0" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:testNGPkg.TestNGClass@9f73a2]" name="beforeclass" is-config="true" duration-ms="0" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:testNGPkg.TestNGClass@9f73a2]" name="beforemethod" is-config="true" duration-ms="1" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="test1()[pri:1, instance:testNGPkg.TestNGClass@9f73a2]" name="test1" duration-ms="8" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:304)
	at org.testng.Assert.assertEquals(Assert.java:314)
	at testNGPkg.TestNGClass.test1(TestNGClass.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:testNGPkg.TestNGClass@9f73a2]" name="aftermethod" is-config="true" duration-ms="1" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeGroups()[pri:0, instance:testNGPkg.TestNGClass@9f73a2]" name="beforeGroups" is-config="true" duration-ms="1" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeGroups -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:testNGPkg.TestNGClass@9f73a2]" name="beforemethod" is-config="true" duration-ms="0" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="test3()[pri:3, instance:testNGPkg.TestNGClass@9f73a2]" name="test3" duration-ms="0" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:testNGPkg.TestNGClass@9f73a2]" name="aftermethod" is-config="true" duration-ms="0" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="afterGroups()[pri:0, instance:testNGPkg.TestNGClass@9f73a2]" name="afterGroups" is-config="true" duration-ms="0" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterGroups -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:testNGPkg.TestNGClass@9f73a2]" name="beforemethod" is-config="true" duration-ms="0" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="test4()[pri:4, instance:testNGPkg.TestNGClass@9f73a2]" name="test4" duration-ms="1" started-at="2017-11-02T23:02:03Z" depends-on-methods="testNGPkg.TestNGClass.test3" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:testNGPkg.TestNGClass@9f73a2]" name="aftermethod" is-config="true" duration-ms="0" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="afterclass()[pri:0, instance:testNGPkg.TestNGClass@9f73a2]" name="afterclass" is-config="true" duration-ms="0" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method status="PASS" signature="aftertest()[pri:0, instance:testNGPkg.TestNGClass@9f73a2]" name="aftertest" is-config="true" duration-ms="1" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
        <test-method status="PASS" signature="aftersuite()[pri:0, instance:testNGPkg.TestNGClass@9f73a2]" name="aftersuite" is-config="true" duration-ms="0" started-at="2017-11-02T23:02:03Z" finished-at="2017-11-02T23:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- testNGPkg.TestNGClass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
